<?xml version="1.0" encoding="utf-8" ?>
<odoo>

    <record id="factor_account" model="account.account">
        <field name="name">FACTOR</field>
        <field name="code">140000</field>
        <field
            name="user_type_id"
            ref="account.data_account_type_current_liabilities"
        />
        <field name="internal_type">other</field>
        <field name="internal_group">liability</field>
    </record>

    <record id="factor_holdback_account" model="account.account">
        <field name="name">FACTOR - holdback</field>
        <field name="code">140010</field>
        <field
            name="user_type_id"
            ref="account.data_account_type_current_liabilities"
        />
        <field name="reconcile" eval="True" />
        <field name="internal_type">other</field>
        <field name="internal_group">liability</field>
    </record>

    <record id="factor_limit_holdback_account" model="account.account">
        <field name="name">FACTOR - limit holdback</field>
        <field name="code">140020</field>
        <field
            name="user_type_id"
            ref="account.data_account_type_current_liabilities"
        />
        <field name="reconcile" eval="True" />
        <field name="internal_type">other</field>
        <field name="internal_group">liability</field>
    </record>

    <record id="factor_journal" model="account.journal">
        <field name="name">FACTOR</field>
        <field name="code">FACT</field>
        <field name="type">bank</field>
        <field name="is_factor" eval="True" />
        <field name="default_account_id" ref="factor_account" />
        <field name="factor_holdback_account_id" ref="factor_holdback_account" />
        <field
            name="factor_limit_holdback_account_id"
            ref="factor_limit_holdback_account"
        />
        <field name="factor_holdback_percent">10.0</field>
    </record>

    <record id="factor_payment_mode" model="account.payment.mode">
        <field name="name">FACT</field>
        <field
            name="payment_method_id"
            ref="account.account_payment_method_manual_in"
        />
        <field name="bank_account_link">fixed</field>
        <field name="fixed_journal_id" ref="factor_journal" />
    </record>

    <record id="factor_payment_mode-refund" model="account.payment.mode">
        <field name="name">FACT-R</field>
        <field
            name="payment_method_id"
            ref="account.account_payment_method_manual_out"
        />
        <field name="bank_account_link">fixed</field>
        <field name="fixed_journal_id" ref="factor_journal" />
    </record>

    <record id="factor_demo_invoice_1" model="account.move">
        <field name="move_type">out_invoice</field>
        <field name="partner_id" ref="base.res_partner_12" />
        <field name="invoice_user_id" ref="base.user_demo" />
        <field
            name="invoice_payment_term_id"
            ref="account.account_payment_term_end_following_month"
        />
        <field name="invoice_date" eval="time.strftime('%Y-%m')+'-01'" />
        <field name="payment_mode_id" ref="factor_payment_mode" />
        <field
            name="invoice_line_ids"
            eval="[
            (0, 0, {'product_id': ref('product.consu_delivery_02'), 'quantity': 1, 'price_unit': 100.0}),
        ]"
        />
    </record>

    <function model="account.move" name="_onchange_partner_id">
        <value eval="[ref('factor_demo_invoice_1')]" />
    </function>

        <!-- Ensure the lines are consistent with the products (taxes, price, name) -->
        <!-- check_move_validity=False because the dynamic lines are computed after, it is checked later at the post function -->
        <function
        model="account.move.line"
        name="_onchange_product_id"
        context="{'check_move_validity': False}"
    >
            <value
            model="account.move.line"
            eval="obj().search([('move_id', 'in', [
                ref('factor_demo_invoice_1'),
            ]), ('parent_state', '=', 'draft')]).ids"
        />
        </function>

        <!-- Recompute the taxes and receivable lines after the onchange executed above -->
        <function
        model="account.move"
        name="_recompute_dynamic_lines"
        context="{'check_move_validity': False}"
    >
            <value eval="[
                ref('factor_demo_invoice_1'),
            ]" />
            <value name="recompute_all_taxes" eval="True" />
            <value name="recompute_tax_base_amount" eval="True" />
        </function>

        <function model="account.move" name="action_post">
           <value
            model="account.move"
            eval="obj().search([('id', 'in', [ref('factor_demo_invoice_1'),]), ('state', '=', 'draft')]).ids"
        />
        </function>
</odoo>
